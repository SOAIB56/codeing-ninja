problem link: https://www.naukri.com/code360/problems/left-view-of-a-binary-tree_920519

solution:
#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getLeftView(TreeNode<int> *root)
{
    //    Write your code here
    bool freq_array[3010]={false};
    queue<pair<TreeNode<int> *, int>> q;
    if(root) q.push({root, 1});
    vector<int>v;
    while(! q.empty())
    {
        pair<TreeNode<int> *, int> parent=q.front();
        q.pop();
        TreeNode<int> * node= parent.first;
        int lev=parent.second;
        if(freq_array[lev]== false )
        {
            v.push_back(node-> data);
            freq_array[lev]= true;
        }
        if(node->left) q.push({node->left, lev+1});
        if(node->right) q.push({node->right, lev+1});

    }
    return v;
}
