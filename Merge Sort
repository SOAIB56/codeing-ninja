problem link: https://www.naukri.com/code360/problems/merge-sort_920442?leftPanelTab=0&leftPanelTabValue=PROBLEM

solution
#include<bits/stdc++.h>
void join(int l, int r, int mid, vector<int> &arr)
{
    int l_siz= mid-l+1;
    int r_siz= r-mid;
    int L[l_siz+1];
    int R[r_siz+1];
    for(int i=l, j=0; i<=mid; i++, j++)
    {
        L[j]= arr[i];
    }
    for(int i=mid+1, j=0; i<=r; i++, j++)
    {
        R[j]= arr[i];
    }
    L[l_siz]=INT_MAX;
    R[r_siz]=INT_MAX;
    int lp=0;
    int rp=0;
    for(int i= l; i<= r; i++)
    {
        if(L[lp]<= R[rp])
        {
            arr[i]= L[lp];
            lp++;
        }
        else
        {
             arr[i]= R[rp];
            rp++;
        }
    }
}
void merge(int l, int r, vector<int> & v)
{
    if(l==r) return;
    int mid= (l+r)/2;
    merge(l, mid, v);
    merge(mid+1, r, v);
    join(l, r, mid, v);
}
void mergeSort(vector < int > & arr, int n) {
    merge(0, arr.size()-1, arr);
    return;
}
